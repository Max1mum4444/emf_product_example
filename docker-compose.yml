version: '3'

networks:
  emf_products_example:

services:
  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - .:/var/www/project:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php81-service
      - mariadb8-service
    networks:
      - emf_products_example

  # php
  php81-service:
    build:
      context: ./docker/php/
      dockerfile: Dockerfile
    links:
      - redis-service
    container_name: php81-container
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www/project:cached
    networks:
      - emf_products_example

  # mariadb
  mariadb-service:
    build:
      context: ./docker/mariadb/
      dockerfile: Dockerfile
    container_name: mariadb-container
    hostname: mariadb
    ports:
      - "3306:3306"
    volumes:
      - ~/docker/emf_products_example/mariadb-emf_products_example_app:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_ROOT_PASSWORD: 'Password123!'
      MYSQL_USER: 'emf_user'
      MYSQL_PASSWORD: 'Password123'
      MYSQL_DATABASE: 'emf_products_example_app'
    networks:
      - emf_products_example

  redis-service:
    image: redis:alpine
    container_name: redis-container
    networks:
      - emf_products_example

  adminer-service:
    container_name: adminer-container
    image: adminer
    hostname: adminer
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - mariadb-service
    networks:
      - emf_products_example

  elasticsearch-service:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    container_name: elasticsearch
    # restart: on-failure
    ports:
      - "9200:9200"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ~/docker/emf_products_example/elasticsearch:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"

    networks:
      - emf_products_example
  logstash:
    build:
      context: ./docker/logstash/
      dockerfile: Dockerfile
    container_name: logstash-container
    # restart: on-failure
    depends_on:
      - mariadb-service
      - elasticsearch-service
    volumes:
      - ./docker/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./docker/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./docker/logstash/config/queries/:/usr/share/logstash/config/queries/
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - emf_products_example

  kibana-service:
    image: docker.elastic.co/kibana/kibana:7.9.3
    container_name: kibana-container
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch-container:9200"
      - "SERVER_NAME=127.0.0.1"

    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-service
    networks:
      - emf_products_example
